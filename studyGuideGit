Git
Study Guide
1
Versa what?!
What is version control?
Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later
2
Where the heart is
What is the difference between distributed and centralized version control
systems?
Distributed - each computer is a full mirror of the repository that everyone is working from
Centralized - the repository is on a central system that everyone can checkout from/commit to.
3
Versa who?!
What does a version control program do for us?
Version control system keeps a repository of the code being worked on so that everyone in the team can check out code and fix/improve.
This way everyone can see what everyone else has done in the past and there should always be a working verison of the code, even when making new additions.
4
Committing to git
What is a commit?
A commit is when you take a file that has been changed and place it in the repository in order to track the changes that you made.
5
Checking out git
What is a check out?
Copy a version from the repository (such as if you were to create a branch)
6
Itâ€™s like a tree limb
What is a branch?
work on the side, like a bug fix or new feature testing
7
The life of a limb
How long are branches in git supposed to exist?
The branch will always be there but it should last until the owner of the branch decides the part they are working on is ready to be implemented back into the code, then they merge the branch back with the master (or it parent)
8
Tree growth
How do you create a branch in git?
command: git branch filename
command: git checkout filename
9
Swinging on a vine
How do you switch branches in git?
command: git checkout -b branchname
this command switches you to a branch named branchname (may need to be in master first)
10
Taping it together
How do you merge branches in git?
command: git merge branchname
this will merge branch named branchname into master
11
Status
How do you check the status of the files you are presently working on?
command: git status
12
Adding to the chaos
How do you add files to the repository?
13
The main line
What is the name for the primary branch in git?
14
What limb are you on?
How do you check which branch you presently have checked out?
15
Git what?!
What is github?
16
We see a need!
Why was git created?
17
A day in the life of git
What is a typical git workflow?
18
Why git?
What makes git different than other version control systems?
19
What were they thinking?!
What were the design criteria for git?
20
Time machine
How do we view the past of a project with git?
21
Commit Comment
How much information, and what kind of information should be in a commit
message?
22
Great Scott!
If there was a mistake made in the past of a project, how should we go about
correcting that mistake?
